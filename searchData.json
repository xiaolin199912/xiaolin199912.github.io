[{"title":"Gradio：轻松实现AI算法可视化部署","url":"/2021/05/21/Gradio：轻松实现ML模型可视化部署/","content":"\n**如何将你的机器学习算法迅速分享给别人，让对方体验，一直是一件麻烦事儿。**\n\n首先大部分人都是在本地跑代码，想要让别人使用你的模型，要么上github；要么将代码打包或者封装成docker用QQ/百度云传输；要么就是学些前后端知识，写个前端界面，买个域名，用flask这样微服务框架快速部署，也许还要结合一下内网穿透。\n\n这些方案的问题在于——要么需要对方会编程，要么需要你会前后端开发，总结起来就是：**麻烦**。\n\n那么有没有更好的解决方案呢？有！它就是小林今天要给大家安利的一个python开源库：**Gradio**。\n\n​\t![image-20210521152614971](https://inkfishing.oss-cn-hangzhou.aliyuncs.com/blogs/01/0101.png)\n\nGradio能够自动化的生成前端界面，定义好输入输出，只需要增加几行代码，一个web交互式页面就做好了。同时支持生成能外部网络访问的链接，能够迅速让你的朋友，同事体验你的算法，总结起来，它的优势有：\n\n- 自动生成页面且可交互\n- 几行代码就能完成\n- 支持生成可外部访问的链接进行分享\n\n\n\n## Get start\n\n### 0.安装Gradio\n\n```bash\npip install gradio\n```\n\n### 1.写个简单的RGB转灰度\n\n```python\nimport gradio as gr\nimport cv2\n\ndef to_black(image):\n    output = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)\n    return output\n\ninterface = gr.Interface(fn=to_black, inputs=\"image\", outputs=\"image\")\ninterface.launch()\n```\n\ngradio的核心是它的`gr.Interface`函数，用来构建可视化界面。\n\n- fn：放你用来处理的函数\n- inputs：写你的输入类型，这里输入的是图像，所以是\"image\"\n- outputs：写你的输出类型，这里输出的是图像，所以是\"image\"\n\n最后我们用`interface.lauch()`把页面一发布，一个本地静态交互页面就完成了！\n\n在浏览器输入`http://127.0.0.1:7860/`,查收你的页面：\n\n![image-20210521152336959](https://inkfishing.oss-cn-hangzhou.aliyuncs.com/blogs/01/0102.png)\n\n上传一张图片，点击「SUBMIT」，大功告成。\n\n![image-20210521152500026](https://inkfishing.oss-cn-hangzhou.aliyuncs.com/blogs/01/0103.png)\n\n对于任何图像处理类的ML代码来说，只要定义好一个图像输入>>模型推理>>返回图片的函数（逻辑和RGB转灰度图本质上没区别），放到`fn`中，就完事了。\n\n​\t\n\n### 2.增加example\n\n我们可以在页面下方添加供用户选择的测试样例。\n\n在`gr.Interface`里的`examples`中放入图片路径，格式为[[路径1],[路径2],...]。\n\n```python\nimport gradio as gr\nimport cv2\n\ndef to_black(image):\n    output = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)\n    return output\n\ninterface = gr.Interface(fn=to_black, inputs=\"image\", outputs=\"image\",\n                        examples=[[\"test.png\"]])\ninterface.launch()\n```\n\n![image-20210521155634673](https://inkfishing.oss-cn-hangzhou.aliyuncs.com/blogs/01/0104.png)\n\n## 3.创建一个外部访问链接\n\n创建外部访问链接非常简单，只需要`launch(share=True)`即可，在打印信息中会看到你的外部访问链接。\n\n免费用户的链接可以使用24小时，想要长期的话需要在gradio官方购买云服务。\n\n\n\n## 4.升个级:图像分类pytorch+resnet18\n\n```python\nimport gradio as gr\nimport torch\nfrom torchvision import transforms\nimport requests\nfrom PIL import Image\n\nmodel = torch.hub.load('pytorch/vision:v0.6.0', 'resnet18', pretrained=True).eval()\n\n# Download human-readable labels for ImageNet.\nresponse = requests.get(\"https://git.io/JJkYN\")\nlabels = response.text.split(\"\\n\")\n\ndef predict(inp):\n  inp = Image.fromarray(inp.astype('uint8'), 'RGB')\n  inp = transforms.ToTensor()(inp).unsqueeze(0)\n  with torch.no_grad():\n    prediction = torch.nn.functional.softmax(model(inp)[0], dim=0)\n  return {labels[i]: float(prediction[i]) for i in range(1000)}\n\ninputs = gr.inputs.Image()\noutputs = gr.outputs.Label(num_top_classes=3)\ngr.Interface(fn=predict, inputs=inputs, outputs=outputs).launch()\n```\n\n![image-20210521160432207](https://inkfishing.oss-cn-hangzhou.aliyuncs.com/blogs/01/0105.png)\n\nps:不得不说imagenet的类标真细\n\n\n\n## 5.了解更多\n\n- Gradio官网：https://www.gradio.app/\n- Gradio官方文档：https://gradio.app/docs\n\n- 使用Gradio的项目「Anime2Sketch」：https://www.gradio.app/hub/AK391/Anime2Sketch\n\n\n\n## 写在最后\n\nGradio的最大的价值我认为是缩短了算法与应用的距离，人人都能迅速分享与体验项目成果，这不管在同事交流，项目汇报，甚至是同学吹牛（大雾），都有性感多了。\n\n同时，作为一个python库，不论是ML，还是数据分析，图像处理，甚至做一个视频转gif的小工具（自媒体老哥表示很有用），都能适用。\n\n**你还在发愁怎么做大作业PPT汇报吗？不如试试Gradio。**\n\n\n\n","tags":["机器学习"]}]